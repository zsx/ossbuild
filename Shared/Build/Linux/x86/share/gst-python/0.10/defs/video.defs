;; -*- scheme -*-
; object definitions ...
(define-object VideoFilter
  (in-module "Gst")
  (parent "GstBaseTransform")
  (c-name "GstVideoFilter")
  (gtype-id "GST_TYPE_VIDEO_FILTER")
)

(define-object VideoSink
  (in-module "Gst")
  (parent "GstBaseSink")
  (c-name "GstVideoSink")
  (gtype-id "GST_TYPE_VIDEO_SINK")
)

;; Enumerations and flags ...

(define-enum VideoFormat
  (in-module "Gst")
  (c-name "GstVideoFormat")
  (gtype-id "GST_TYPE_VIDEO_FORMAT")
  (values
    '("unknown" "GST_VIDEO_FORMAT_UNKNOWN")
    '("i420" "GST_VIDEO_FORMAT_I420")
    '("yv12" "GST_VIDEO_FORMAT_YV12")
    '("yuy2" "GST_VIDEO_FORMAT_YUY2")
    '("uyvy" "GST_VIDEO_FORMAT_UYVY")
    '("ayuv" "GST_VIDEO_FORMAT_AYUV")
    '("rgbx" "GST_VIDEO_FORMAT_RGBx")
    '("bgrx" "GST_VIDEO_FORMAT_BGRx")
    '("xrgb" "GST_VIDEO_FORMAT_xRGB")
    '("xbgr" "GST_VIDEO_FORMAT_xBGR")
    '("rgba" "GST_VIDEO_FORMAT_RGBA")
    '("bgra" "GST_VIDEO_FORMAT_BGRA")
    '("argb" "GST_VIDEO_FORMAT_ARGB")
    '("abgr" "GST_VIDEO_FORMAT_ABGR")
    '("rgb" "GST_VIDEO_FORMAT_RGB")
    '("bgr" "GST_VIDEO_FORMAT_BGR")
    '("y41b" "GST_VIDEO_FORMAT_Y41B")
    '("y42b" "GST_VIDEO_FORMAT_Y42B")
    '("yvyu" "GST_VIDEO_FORMAT_YVYU")
  )
)


;; From gstvideofilter.h

(define-function gst_video_filter_get_type
  (c-name "gst_video_filter_get_type")
  (return-type "GType")
)



;; From gstvideosink.h

(define-function gst_video_sink_get_type
  (c-name "gst_video_sink_get_type")
  (return-type "GType")
)

(define-function video_sink_center_rect
  (c-name "gst_video_sink_center_rect")
  (return-type "none")
  (parameters
    '("GstVideoRectangle" "src")
    '("GstVideoRectangle" "dst")
    '("GstVideoRectangle*" "result")
    '("gboolean" "scaling")
  )
)



;; From video.h

(define-function get_size
  (c-name "gst_video_get_size")
  (return-type "gboolean")
  (parameters
    '("GstPad*" "pad")
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-function calculate_display_ratio
  (c-name "gst_video_calculate_display_ratio")
  (return-type "gboolean")
  (parameters
    '("guint*" "dar_n")
    '("guint*" "dar_d")
    '("guint" "video_width")
    '("guint" "video_height")
    '("guint" "video_par_n")
    '("guint" "video_par_d")
    '("guint" "display_par_n")
    '("guint" "display_par_d")
  )
)

(define-function format_parse_caps
  (c-name "gst_video_format_parse_caps")
  (return-type "gboolean")
  (parameters
    '("GstCaps*" "caps")
    '("GstVideoFormat*" "format")
    '("int*" "width")
    '("int*" "height")
  )
)

(define-function format_parse_caps_interlaced
  (c-name "gst_video_format_parse_caps_interlaced")
  (return-type "gboolean")
  (parameters
    '("GstCaps*" "caps")
    '("gboolean*" "interlaced")
  )
)

(define-function parse_caps_framerate
  (c-name "gst_video_parse_caps_framerate")
  (return-type "gboolean")
  (parameters
    '("GstCaps*" "caps")
    '("int*" "fps_n")
    '("int*" "fps_d")
  )
)

(define-function parse_caps_pixel_aspect_ratio
  (c-name "gst_video_parse_caps_pixel_aspect_ratio")
  (return-type "gboolean")
  (parameters
    '("GstCaps*" "caps")
    '("int*" "par_n")
    '("int*" "par_d")
  )
)

(define-method new_caps
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_new_caps")
  (caller-owns-return #t)
  (return-type "GstCaps*")
  (parameters
    '("int" "width")
    '("int" "height")
    '("int" "framerate_n")
    '("int" "framerate_d")
    '("int" "par_n")
    '("int" "par_d")
  )
)

(define-method new_caps_interlaced
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_new_caps_interlaced")
  (caller-owns-return #t)
  (return-type "GstCaps*")
  (parameters
    '("int" "width")
    '("int" "height")
    '("int" "framerate_n")
    '("int" "framerate_d")
    '("int" "par_n")
    '("int" "par_d")
    '("gboolean" "interlaced")
  )
)

(define-function format_from_fourcc
  (c-name "gst_video_format_from_fourcc")
  (return-type "GstVideoFormat")
  (parameters
    '("guint32" "fourcc")
  )
)

(define-method to_fourcc
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_to_fourcc")
  (return-type "guint32")
)

(define-method is_rgb
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_is_rgb")
  (return-type "gboolean")
)

(define-method is_yuv
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_is_yuv")
  (return-type "gboolean")
)

(define-method has_alpha
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_has_alpha")
  (return-type "gboolean")
)

(define-method get_row_stride
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_get_row_stride")
  (return-type "int")
  (parameters
    '("int" "component")
    '("int" "width")
  )
)

(define-method get_pixel_stride
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_get_pixel_stride")
  (return-type "int")
  (parameters
    '("int" "component")
  )
)

(define-method get_component_width
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_get_component_width")
  (return-type "int")
  (parameters
    '("int" "component")
    '("int" "width")
  )
)

(define-method get_component_height
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_get_component_height")
  (return-type "int")
  (parameters
    '("int" "component")
    '("int" "height")
  )
)

(define-method get_component_offset
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_get_component_offset")
  (return-type "int")
  (parameters
    '("int" "component")
    '("int" "width")
    '("int" "height")
  )
)

(define-method get_size
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_get_size")
  (return-type "int")
  (parameters
    '("int" "width")
    '("int" "height")
  )
)

(define-method convert
  (of-object "GstVideoFormat")
  (c-name "gst_video_format_convert")
  (return-type "gboolean")
  (parameters
    '("int" "width")
    '("int" "height")
    '("int" "fps_n")
    '("int" "fps_d")
    '("GstFormat" "src_format")
    '("gint64" "src_value")
    '("GstFormat" "dest_format")
    '("gint64*" "dest_value")
  )
)


