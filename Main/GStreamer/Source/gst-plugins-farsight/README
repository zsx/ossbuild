WHAT IT IS
----------

This is a set of plugins for Gstreamer that will be used by Farsight for
Audio/Video conferencing.

COMPILING FROM SOURCE
---------------------
- make sure you compiled and at least did a test-run of GStreamer (core)
- check output of ./configure --help to see if any options apply to you
- configure the source tree:
  - if you installed GStreamer, then do:
      ./configure
    If configure complains about missing GStreamer, you should try the 
    following command:
    $export PKG_CONFIG_PATH=prefix/lib/pkgconfig
    where prefix should be replaced by the prefix you used to configure
    GStreamer. (Be mindful NOT to ADD a trailing / to that option !).
    After that, rerun ./configure. If this doesn't fix it, you have other
    issues ;)

  - if you didn't install GStreamer, you can still compile the plug-ins.
    Add the path to gstreamer-uninstalled.pc (which lives in the gstreamer
    source tree) to PKG_CONFIG_PATH
    or run configure --with-pkg-config-path=(path to gstreamer uninstalled)
  
  - the output of configure will give you a list of plug-ins with external
    dependencies (ie, depending on other libs, see below).  By no means
    should you try to get them all built on your first run.  This is hard
    enough as it is ;)  Resist the urge to get the most features for now.
    It doesn't list all of the non-depending plug-ins, which get built
    regardless (unless you explicitly asked it not to).

- build the tree:
  make
  If any plug-in causes a problem at this stage, you should re-configure
  with --disable-(dependency)
  and doublecheck if configure reports this plug-in as being disabled.
  Then re-run make.

- install:
  - if you installed GStreamer, and want to install the plug-ins as well, run
      make install
    and, as root, run
      gst-register
  - if you installed GStreamer, but don't want to install the plug-ins, run
      gst-register --gst-plugin-path=.
  - if you didn't install GStreamer, then do
      path/to/gstreamer/tools/gst-register --gst-plugin-path=.
      (Replace path/to/gstreamer obviously)

COMPILING FROM Darcs
------------------
When building from Darcs sources, you will need to run autogen.sh to generate
the build system files.

GStreamer is cutting-edge stuff.  To be a CVS developer, you need
what used to be considered cutting-edge tools.

ATM, most of us have at least these versions :

* autoconf      2.59
* automake      1.8
* gettext       0.11.5
* libtool       1.4     (NOT Gentoo's genetic failure 1.4.2)
* pkg-config    0.8.0

autogen.sh will check for these versions and complain if you don't have 
them.  You can also specify specific versions of automake and autoconf with
--with-automake and --with-autoconf

Check autogen.sh options by running autogen.sh --help

autogen.sh can pass on arguments to configure - you just need to separate them
from autogen.sh with -- between the two.
prefix has been added to autogen.sh but will be passed on to configure because
some build scripts like that.
You will probably have to pass at least --with-pkg-config-path to autogen.sh
to point to the CVS version of GStreamer.

When you have done this once, you can use autoregen.sh to re-autogen with
the last passed options as a handy shortcut.  Use it.

After the autogen.sh stage, you can follow the directions listed in
"COMPILING FROM SOURCE"

PLUG-IN DEPENDENCIES AND LICENSES
---------------------------------
GStreamer is developed under the terms of the LGPL (see LICENSE file for 
details). Some of our plug-ins however rely on libraries which are available 
under other licenses. This means that if you are using an application which 
has a non-GPL compatible license (for instance a closed-source application) 
with GStreamer, you have to make sure not to use GPL-linked plug-ins.
When using GPL-linked plug-ins, GStreamer is for all practical reasons 
under the GPL itself. 
