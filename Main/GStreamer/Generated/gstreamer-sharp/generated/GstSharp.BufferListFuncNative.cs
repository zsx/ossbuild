// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GstSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate int BufferListFuncNative(IntPtr buffer, uint group, uint idx, IntPtr user_data);

	internal class BufferListFuncInvoker {

		BufferListFuncNative native_cb;
		IntPtr __data;
		Gst.GLib.DestroyNotify __notify;

		~BufferListFuncInvoker ()
		{
			if (__notify == null)
				return;
			__notify (__data);
		}

		internal BufferListFuncInvoker (BufferListFuncNative native_cb) : this (native_cb, IntPtr.Zero, null) {}

		internal BufferListFuncInvoker (BufferListFuncNative native_cb, IntPtr data) : this (native_cb, data, null) {}

		internal BufferListFuncInvoker (BufferListFuncNative native_cb, IntPtr data, Gst.GLib.DestroyNotify notify)
		{
			this.native_cb = native_cb;
			__data = data;
			__notify = notify;
		}

		internal Gst.BufferListFunc Handler {
			get {
				return new Gst.BufferListFunc(InvokeNative);
			}
		}

		Gst.BufferListItem InvokeNative (Gst.Buffer buffer, uint group, uint idx)
		{
			Gst.BufferListItem result = (Gst.BufferListItem) native_cb (buffer == null ? IntPtr.Zero : buffer.Handle, group, idx, __data);
			return result;
		}
	}

	internal class BufferListFuncWrapper {

		public int NativeCallback (IntPtr buffer, uint group, uint idx, IntPtr user_data)
		{
			try {
				Gst.BufferListItem __ret = managed (Gst.MiniObject.GetObject(buffer) as Gst.Buffer, group, idx);
				if (release_on_call)
					gch.Free ();
				return (int) __ret;
			} catch (Exception e) {
				Gst.GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: Above call does not return.
				throw e;
			}
		}

		bool release_on_call = false;
		GCHandle gch;

		public void PersistUntilCalled ()
		{
			release_on_call = true;
			gch = GCHandle.Alloc (this);
		}

		internal BufferListFuncNative NativeDelegate;
		Gst.BufferListFunc managed;

		public BufferListFuncWrapper (Gst.BufferListFunc managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new BufferListFuncNative (NativeCallback);
		}

		public static Gst.BufferListFunc GetManagedDelegate (BufferListFuncNative native)
		{
			if (native == null)
				return null;
			BufferListFuncWrapper wrapper = (BufferListFuncWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
