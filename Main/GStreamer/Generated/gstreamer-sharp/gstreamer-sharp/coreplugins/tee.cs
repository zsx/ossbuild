using System;
using System.Collections;
using System.Runtime.InteropServices;
using Gst.GLib;
using Gst;
using Gst.Interfaces;

namespace Gst.CorePlugins {
#region Autogenerated code
	[GTypeName ("GstTee")]
	public sealed class Tee : Gst.Element {
		public Tee (IntPtr raw) : base (raw) { }

		[DllImport("libgstreamer-0.10.dll") ]
		static extern IntPtr gst_element_factory_make (IntPtr element, IntPtr name);

		public Tee (string name) : base (IntPtr.Zero) {
			IntPtr native_name = Gst.GLib.Marshaller.StringToPtrGStrdup (name);
			IntPtr native_element = Gst.GLib.Marshaller.StringToPtrGStrdup ("tee");
			Raw = gst_element_factory_make (native_element, native_name);
			Gst.GLib.Marshaller.Free (native_name);
			Gst.GLib.Marshaller.Free (native_element);
			if (Raw == IntPtr.Zero)
				throw new Exception ("Failed to instantiate element \"tee\"");
		}

		public Tee () : this ((string) null) { }

		public static Tee Make (string name) {
			return Gst.ElementFactory.Make ("tee", name) as Tee;
		}

		public static Tee Make () { return Make (null); } 

		[Gst.GLib.Property ("name")]
		public string Name {
			get {
				Gst.GLib.Value val = GetProperty ("name");
				string ret = (string) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "name");
				val.Val = value;
				SetProperty ("name", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("num-src-pads")]
		public int NumSrcPads {
			get {
				Gst.GLib.Value val = GetProperty ("num-src-pads");
				int ret = (int) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "num-src-pads");
				val.Val = value;
				SetProperty ("num-src-pads", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("has-sink-loop")]
		public bool HasSinkLoop {
			get {
				Gst.GLib.Value val = GetProperty ("has-sink-loop");
				bool ret = (bool) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "has-sink-loop");
				val.Val = value;
				SetProperty ("has-sink-loop", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("has-chain")]
		public bool HasChain {
			get {
				Gst.GLib.Value val = GetProperty ("has-chain");
				bool ret = (bool) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "has-chain");
				val.Val = value;
				SetProperty ("has-chain", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("silent")]
		public bool Silent {
			get {
				Gst.GLib.Value val = GetProperty ("silent");
				bool ret = (bool) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "silent");
				val.Val = value;
				SetProperty ("silent", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("last-message")]
		public string LastMessage {
			get {
				Gst.GLib.Value val = GetProperty ("last-message");
				string ret = (string) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "last-message");
				val.Val = value;
				SetProperty ("last-message", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("pull-mode")]
		public PullModeType PullMode {
			get {
				Gst.GLib.Value val = GetProperty ("pull-mode");
				PullModeType ret = (PullModeType) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "pull-mode");
				val.Val = value;
				SetProperty ("pull-mode", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("alloc-pad")]
		public Gst.Pad AllocPad {
			get {
				Gst.GLib.Value val = GetProperty ("alloc-pad");
				Gst.Pad ret = (Gst.Pad) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "alloc-pad");
				val.Val = value;
				SetProperty ("alloc-pad", val);
				val.Dispose ();
			}
		}


		[GTypeName ("GstTeePullMode")]
		public enum PullModeType {
			Never = 0, 
			Single = 1, 
		}

#endregion
	}

}
