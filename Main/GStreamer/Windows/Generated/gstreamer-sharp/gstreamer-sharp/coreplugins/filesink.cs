using System;
using System.Collections;
using System.Runtime.InteropServices;
using Gst.GLib;
using Gst;
using Gst.Interfaces;

namespace Gst.CorePlugins {
#region Autogenerated code
	[GTypeName ("GstFileSink")]
	public sealed class FileSink : Gst.Base.BaseSink {
		public FileSink (IntPtr raw) : base (raw) { }

		[DllImport("libgstreamer-0.10.dll") ]
		static extern IntPtr gst_element_factory_make (IntPtr element, IntPtr name);

		public FileSink (string name) : base (IntPtr.Zero) {
			IntPtr native_name = Gst.GLib.Marshaller.StringToPtrGStrdup (name);
			IntPtr native_element = Gst.GLib.Marshaller.StringToPtrGStrdup ("filesink");
			Raw = gst_element_factory_make (native_element, native_name);
			Gst.GLib.Marshaller.Free (native_name);
			Gst.GLib.Marshaller.Free (native_element);
			if (Raw == IntPtr.Zero)
				throw new Exception ("Failed to instantiate element \"filesink\"");
		}

		public FileSink () : this ((string) null) { }

		public static FileSink Make (string name) {
			return Gst.ElementFactory.Make ("filesink", name) as FileSink;
		}

		public static FileSink Make () { return Make (null); } 

		[Gst.GLib.Property ("name")]
		public string Name {
			get {
				Gst.GLib.Value val = GetProperty ("name");
				string ret = (string) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "name");
				val.Val = value;
				SetProperty ("name", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("preroll-queue-len")]
		public uint PrerollQueueLen {
			get {
				Gst.GLib.Value val = GetProperty ("preroll-queue-len");
				uint ret = (uint) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "preroll-queue-len");
				val.Val = value;
				SetProperty ("preroll-queue-len", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("sync")]
		public bool Sync {
			get {
				Gst.GLib.Value val = GetProperty ("sync");
				bool ret = (bool) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "sync");
				val.Val = value;
				SetProperty ("sync", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("max-lateness")]
		public long MaxLateness {
			get {
				Gst.GLib.Value val = GetProperty ("max-lateness");
				long ret = (long) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "max-lateness");
				val.Val = value;
				SetProperty ("max-lateness", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("qos")]
		public bool Qos {
			get {
				Gst.GLib.Value val = GetProperty ("qos");
				bool ret = (bool) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "qos");
				val.Val = value;
				SetProperty ("qos", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("async")]
		public bool Async {
			get {
				Gst.GLib.Value val = GetProperty ("async");
				bool ret = (bool) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "async");
				val.Val = value;
				SetProperty ("async", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("ts-offset")]
		public long TsOffset {
			get {
				Gst.GLib.Value val = GetProperty ("ts-offset");
				long ret = (long) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "ts-offset");
				val.Val = value;
				SetProperty ("ts-offset", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("last-buffer")]
		public Gst.Buffer LastBuffer {
			get {
				Gst.GLib.Value val = GetProperty ("last-buffer");
				Gst.Buffer ret = (Gst.Buffer) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "last-buffer");
				val.Val = value;
				SetProperty ("last-buffer", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("blocksize")]
		public uint Blocksize {
			get {
				Gst.GLib.Value val = GetProperty ("blocksize");
				uint ret = (uint) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "blocksize");
				val.Val = value;
				SetProperty ("blocksize", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("render-delay")]
		public ulong RenderDelay {
			get {
				Gst.GLib.Value val = GetProperty ("render-delay");
				ulong ret = (ulong) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "render-delay");
				val.Val = value;
				SetProperty ("render-delay", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("location")]
		public string Location {
			get {
				Gst.GLib.Value val = GetProperty ("location");
				string ret = (string) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "location");
				val.Val = value;
				SetProperty ("location", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("buffer-mode")]
		public BufferModeType BufferMode {
			get {
				Gst.GLib.Value val = GetProperty ("buffer-mode");
				BufferModeType ret = (BufferModeType) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "buffer-mode");
				val.Val = value;
				SetProperty ("buffer-mode", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("buffer-size")]
		public uint BufferSize {
			get {
				Gst.GLib.Value val = GetProperty ("buffer-size");
				uint ret = (uint) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "buffer-size");
				val.Val = value;
				SetProperty ("buffer-size", val);
				val.Dispose ();
			}
		}

		[Gst.GLib.Property ("append")]
		public bool Append {
			get {
				Gst.GLib.Value val = GetProperty ("append");
				bool ret = (bool) val.Val;
				val.Dispose ();
				return ret;
			}
			set {
				Gst.GLib.Value val = new Gst.GLib.Value (this, "append");
				val.Val = value;
				SetProperty ("append", val);
				val.Dispose ();
			}
		}


		[GTypeName ("GstFileSinkBufferMode")]
		public enum BufferModeType {
			Default = -1, 
			Full = 0, 
			Line = 64, 
			Unbuffered = 4, 
		}

#endregion
	}

}
