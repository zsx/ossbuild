<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GFilterOutputStream">
<refmeta>
<refentrytitle role="top_of_page" id="GFilterOutputStream.top_of_page">GFilterOutputStream</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GFilterOutputStream</refname>
<refpurpose>Filter Output Stream</refpurpose>
</refnamediv>

<refsynopsisdiv id="GFilterOutputStream.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gio/gio.h&gt;

                    <link linkend="GFilterOutputStream-struct">GFilterOutputStream</link>;
<link linkend="GOutputStream">GOutputStream</link> *     <link linkend="g-filter-output-stream-get-base-stream">g_filter_output_stream_get_base_stream</link>
                                                        (<link linkend="GFilterOutputStream">GFilterOutputStream</link> *stream);
<link linkend="gboolean">gboolean</link>            <link linkend="g-filter-output-stream-get-close-base-stream">g_filter_output_stream_get_close_base_stream</link>
                                                        (<link linkend="GFilterOutputStream">GFilterOutputStream</link> *stream);
<link linkend="void">void</link>                <link linkend="g-filter-output-stream-set-close-base-stream">g_filter_output_stream_set_close_base_stream</link>
                                                        (<link linkend="GFilterOutputStream">GFilterOutputStream</link> *stream,
                                                         <link linkend="gboolean">gboolean</link> close_base);
</synopsis>
</refsynopsisdiv>

<refsect1 id="GFilterOutputStream.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="GOutputStream">GOutputStream</link>
         +----GFilterOutputStream
               +----<link linkend="GBufferedOutputStream">GBufferedOutputStream</link>
               +----<link linkend="GDataOutputStream">GDataOutputStream</link>
</synopsis>
</refsect1>





<refsect1 id="GFilterOutputStream.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="GFilterOutputStream--base-stream">base-stream</link>&quot;              <link linkend="GOutputStream">GOutputStream</link>*        : Read / Write / Construct Only
  &quot;<link linkend="GFilterOutputStream--close-base-stream">close-base-stream</link>&quot;        <link linkend="gboolean">gboolean</link>              : Read / Write / Construct Only
</synopsis>
</refsect1>



<refsect1 id="GFilterOutputStream.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
<para>
</para>
</refsect1>

<refsect1 id="GFilterOutputStream.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GFilterOutputStream-struct" role="struct">
<title>GFilterOutputStream</title>
<indexterm zone="GFilterOutputStream-struct"><primary sortas="FilterOutputStream">GFilterOutputStream</primary></indexterm><programlisting>typedef struct _GFilterOutputStream GFilterOutputStream;</programlisting>
<para>
A base class for all output streams that work on an underlying stream.</para>
<para>
</para></refsect2>
<refsect2 id="g-filter-output-stream-get-base-stream" role="function">
<title>g_filter_output_stream_get_base_stream ()</title>
<indexterm zone="g-filter-output-stream-get-base-stream"><primary sortas="filter_output_stream_get_base_stream">g_filter_output_stream_get_base_stream</primary></indexterm><programlisting><link linkend="GOutputStream">GOutputStream</link> *     g_filter_output_stream_get_base_stream
                                                        (<link linkend="GFilterOutputStream">GFilterOutputStream</link> *stream);</programlisting>
<para>
Gets the base stream for the filter stream.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>stream</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GFilterOutputStream"><type>GFilterOutputStream</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GOutputStream"><type>GOutputStream</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="g-filter-output-stream-get-close-base-stream" role="function">
<title>g_filter_output_stream_get_close_base_stream ()</title>
<indexterm zone="g-filter-output-stream-get-close-base-stream"><primary sortas="filter_output_stream_get_close_base_stream">g_filter_output_stream_get_close_base_stream</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            g_filter_output_stream_get_close_base_stream
                                                        (<link linkend="GFilterOutputStream">GFilterOutputStream</link> *stream);</programlisting>
<para>
Returns whether the base stream will be closed when <parameter>stream</parameter> is
closed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>stream</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GFilterOutputStream"><type>GFilterOutputStream</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if the base stream will be closed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="g-filter-output-stream-set-close-base-stream" role="function">
<title>g_filter_output_stream_set_close_base_stream ()</title>
<indexterm zone="g-filter-output-stream-set-close-base-stream"><primary sortas="filter_output_stream_set_close_base_stream">g_filter_output_stream_set_close_base_stream</primary></indexterm><programlisting><link linkend="void">void</link>                g_filter_output_stream_set_close_base_stream
                                                        (<link linkend="GFilterOutputStream">GFilterOutputStream</link> *stream,
                                                         <link linkend="gboolean">gboolean</link> close_base);</programlisting>
<para>
Sets whether the base stream will be closed when <parameter>stream</parameter> is closed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>stream</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GFilterOutputStream"><type>GFilterOutputStream</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>close_base</parameter>&#160;:</term>
<listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> to close the base stream.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="GFilterOutputStream.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GFilterOutputStream--base-stream" role="property"><title>The <literal>&quot;base-stream&quot;</literal> property</title>
<indexterm zone="GFilterOutputStream--base-stream"><primary sortas="FilterOutputStream:base-stream">GFilterOutputStream:base-stream</primary></indexterm><programlisting>  &quot;base-stream&quot;              <link linkend="GOutputStream">GOutputStream</link>*        : Read / Write / Construct Only</programlisting>
<para>The underlying base stream on which the io ops will be done.</para></refsect2>
<refsect2 id="GFilterOutputStream--close-base-stream" role="property"><title>The <literal>&quot;close-base-stream&quot;</literal> property</title>
<indexterm zone="GFilterOutputStream--close-base-stream"><primary sortas="FilterOutputStream:close-base-stream">GFilterOutputStream:close-base-stream</primary></indexterm><programlisting>  &quot;close-base-stream&quot;        <link linkend="gboolean">gboolean</link>              : Read / Write / Construct Only</programlisting>
<para>If the base stream should be closed when the filter stream is closed.</para><para>Default value: TRUE</para>
</refsect2>
</refsect1>




</refentry>
