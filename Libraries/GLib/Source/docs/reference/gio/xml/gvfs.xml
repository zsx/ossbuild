<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GVfs">
<refmeta>
<refentrytitle role="top_of_page" id="GVfs.top_of_page">GVfs</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GVfs</refname>
<refpurpose>Virtual File System</refpurpose>
</refnamediv>

<refsynopsisdiv id="GVfs.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gio/gio.h&gt;

                    <link linkend="GVfs-struct">GVfs</link>;
#define             <link linkend="G-VFS-EXTENSION-POINT-NAME--CAPS">G_VFS_EXTENSION_POINT_NAME</link>
<link linkend="GFile">GFile</link> *             <link linkend="g-vfs-get-file-for-path">g_vfs_get_file_for_path</link>             (<link linkend="GVfs">GVfs</link> *vfs,
                                                         const <link linkend="char">char</link> *path);
<link linkend="GFile">GFile</link> *             <link linkend="g-vfs-get-file-for-uri">g_vfs_get_file_for_uri</link>              (<link linkend="GVfs">GVfs</link> *vfs,
                                                         const <link linkend="char">char</link> *uri);
<link linkend="GFile">GFile</link> *             <link linkend="g-vfs-parse-name">g_vfs_parse_name</link>                    (<link linkend="GVfs">GVfs</link> *vfs,
                                                         const <link linkend="char">char</link> *parse_name);
<link linkend="GVfs">GVfs</link> *              <link linkend="g-vfs-get-default">g_vfs_get_default</link>                   (void);
<link linkend="GVfs">GVfs</link> *              <link linkend="g-vfs-get-local">g_vfs_get_local</link>                     (void);
<link linkend="gboolean">gboolean</link>            <link linkend="g-vfs-is-active">g_vfs_is_active</link>                     (<link linkend="GVfs">GVfs</link> *vfs);
const <link linkend="gchar">gchar</link>* const * <link linkend="g-vfs-get-supported-uri-schemes">g_vfs_get_supported_uri_schemes</link>    (<link linkend="GVfs">GVfs</link> *vfs);
</synopsis>
</refsynopsisdiv>

<refsect1 id="GVfs.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----GVfs
</synopsis>
</refsect1>








<refsect1 id="GVfs.description" role="desc">
<title role="desc.title">Description</title>
<para>
Entry point for using GIO functionality.</para>
<para>
</para>
</refsect1>

<refsect1 id="GVfs.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GVfs-struct" role="struct">
<title>GVfs</title>
<indexterm zone="GVfs-struct"><primary sortas="Vfs">GVfs</primary></indexterm><programlisting>typedef struct _GVfs GVfs;</programlisting>
<para>
Virtual File System object.</para>
<para>
</para></refsect2>
<refsect2 id="G-VFS-EXTENSION-POINT-NAME--CAPS" role="macro">
<title>G_VFS_EXTENSION_POINT_NAME</title>
<indexterm zone="G-VFS-EXTENSION-POINT-NAME--CAPS"><primary sortas="VFS_EXTENSION_POINT_NAME">G_VFS_EXTENSION_POINT_NAME</primary></indexterm><programlisting>#define G_VFS_EXTENSION_POINT_NAME "gio-vfs"
</programlisting>
<para>
Extension point for <link linkend="GVfs"><type>GVfs</type></link> functionality.
See <link linkend="extending-gio">Extending GIO</link>.</para>
<para>
</para></refsect2>
<refsect2 id="g-vfs-get-file-for-path" role="function">
<title>g_vfs_get_file_for_path ()</title>
<indexterm zone="g-vfs-get-file-for-path"><primary sortas="vfs_get_file_for_path">g_vfs_get_file_for_path</primary></indexterm><programlisting><link linkend="GFile">GFile</link> *             g_vfs_get_file_for_path             (<link linkend="GVfs">GVfs</link> *vfs,
                                                         const <link linkend="char">char</link> *path);</programlisting>
<para>
Gets a <link linkend="GFile"><type>GFile</type></link> for <parameter>path</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vfs</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GVfs"><type>GVfs</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> a string containing a VFS path.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GFile"><type>GFile</type></link>. 
    Free the returned object with <link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="g-vfs-get-file-for-uri" role="function">
<title>g_vfs_get_file_for_uri ()</title>
<indexterm zone="g-vfs-get-file-for-uri"><primary sortas="vfs_get_file_for_uri">g_vfs_get_file_for_uri</primary></indexterm><programlisting><link linkend="GFile">GFile</link> *             g_vfs_get_file_for_uri              (<link linkend="GVfs">GVfs</link> *vfs,
                                                         const <link linkend="char">char</link> *uri);</programlisting>
<para>
Gets a <link linkend="GFile"><type>GFile</type></link> for <parameter>uri</parameter>.
</para>
<para>
This operation never fails, but the returned object
might not support any I/O operation if the URI 
is malformed or if the URI scheme is not supported.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vfs</parameter>&#160;:</term>
<listitem><simpara> a<link linkend="GVfs"><type>GVfs</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara> a string containing a URI 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GFile"><type>GFile</type></link>. 
    Free the returned object with <link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="g-vfs-parse-name" role="function">
<title>g_vfs_parse_name ()</title>
<indexterm zone="g-vfs-parse-name"><primary sortas="vfs_parse_name">g_vfs_parse_name</primary></indexterm><programlisting><link linkend="GFile">GFile</link> *             g_vfs_parse_name                    (<link linkend="GVfs">GVfs</link> *vfs,
                                                         const <link linkend="char">char</link> *parse_name);</programlisting>
<para>
This operation never fails, but the returned object might 
not support any I/O operations if the <parameter>parse_name</parameter> cannot 
be parsed by the <link linkend="GVfs"><type>GVfs</type></link> module.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vfs</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GVfs"><type>GVfs</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parse_name</parameter>&#160;:</term>
<listitem><simpara> a string to be parsed by the VFS module.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GFile"><type>GFile</type></link> for the given <parameter>parse_name</parameter>.
    Free the returned object with <link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="g-vfs-get-default" role="function">
<title>g_vfs_get_default ()</title>
<indexterm zone="g-vfs-get-default"><primary sortas="vfs_get_default">g_vfs_get_default</primary></indexterm><programlisting><link linkend="GVfs">GVfs</link> *              g_vfs_get_default                   (void);</programlisting>
<para>
Gets the default <link linkend="GVfs"><type>GVfs</type></link> for the system.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GVfs"><type>GVfs</type></link>. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="g-vfs-get-local" role="function">
<title>g_vfs_get_local ()</title>
<indexterm zone="g-vfs-get-local"><primary sortas="vfs_get_local">g_vfs_get_local</primary></indexterm><programlisting><link linkend="GVfs">GVfs</link> *              g_vfs_get_local                     (void);</programlisting>
<para>
Gets the local <link linkend="GVfs"><type>GVfs</type></link> for the system.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GVfs"><type>GVfs</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="g-vfs-is-active" role="function">
<title>g_vfs_is_active ()</title>
<indexterm zone="g-vfs-is-active"><primary sortas="vfs_is_active">g_vfs_is_active</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            g_vfs_is_active                     (<link linkend="GVfs">GVfs</link> *vfs);</programlisting>
<para>
Checks if the VFS is active.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vfs</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GVfs"><type>GVfs</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if construction of the <parameter>vfs</parameter> was successful and it is now active.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="g-vfs-get-supported-uri-schemes" role="function">
<title>g_vfs_get_supported_uri_schemes ()</title>
<indexterm zone="g-vfs-get-supported-uri-schemes"><primary sortas="vfs_get_supported_uri_schemes">g_vfs_get_supported_uri_schemes</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>* const * g_vfs_get_supported_uri_schemes    (<link linkend="GVfs">GVfs</link> *vfs);</programlisting>
<para>
Gets a list of URI schemes supported by <parameter>vfs</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>vfs</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GVfs"><type>GVfs</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="NULL--CAPS"><literal>NULL</literal></link>-terminated array of strings.
    The returned array belongs to GIO and must 
    not be freed or modified.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
