@c Automatically generated, do not edit.

@c snarfed from ../guile/src/extra.c:513
@deffn {Scheme Procedure} set-certificate-credentials-openpgp-keys! cred pub sec
Use certificate @var{pub} and secret key @var{sec} in certificate credentials @var{cred}.
@end deffn

@c snarfed from ../guile/src/extra.c:475
@deffn {Scheme Procedure} openpgp-keyring-contains-key-id? keyring id
Return @code{#f} if key ID @var{id} is in @var{keyring}, @code{#f} otherwise.
@end deffn

@c snarfed from ../guile/src/extra.c:429
@deffn {Scheme Procedure} import-openpgp-keyring data format
Import @var{data} (a u8vector) according to @var{format} and return the imported keyring.
@end deffn

@c snarfed from ../guile/src/extra.c:403
@deffn {Scheme Procedure} openpgp-certificate-usage key
Return a list of values denoting the key usage of @var{key}.
@end deffn

@c snarfed from ../guile/src/extra.c:386
@deffn {Scheme Procedure} openpgp-certificate-version key
Return the version of the OpenPGP message format (RFC2440) honored by @var{key}.
@end deffn

@c snarfed from ../guile/src/extra.c:365
@deffn {Scheme Procedure} openpgp-certificate-algorithm key
Return two values: the certificate algorithm used by @var{key} and the number of bits used.
@end deffn

@c snarfed from ../guile/src/extra.c:329
@deffn {Scheme Procedure} openpgp-certificate-names key
Return the list of names for @var{key}.
@end deffn

@c snarfed from ../guile/src/extra.c:306
@deffn {Scheme Procedure} openpgp-certificate-name key index
Return the @var{index}th name of @var{key}.
@end deffn

@c snarfed from ../guile/src/extra.c:248
@deffn {Scheme Procedure} openpgp-certificate-fingerprint key
Return a new u8vector denoting the fingerprint of @var{key}.
@end deffn

@c snarfed from ../guile/src/extra.c:218
@deffn {Scheme Procedure} openpgp-certificate-fingerprint! key fpr
Store in @var{fpr} (a u8vector) the fingerprint of @var{key}.  Return the number of bytes stored in @var{fpr}.
@end deffn

@c snarfed from ../guile/src/extra.c:183
@deffn {Scheme Procedure} openpgp-certificate-id! key id
Store the ID (an 8 byte sequence) of certificate @var{key} in @var{id} (a u8vector).
@end deffn

@c snarfed from ../guile/src/extra.c:157
@deffn {Scheme Procedure} openpgp-certificate-id key
Return the ID (an 8-element u8vector) of certificate @var{key}.
@end deffn

@c snarfed from ../guile/src/extra.c:102
@deffn {Scheme Procedure} import-openpgp-private-key data format [pass]
Return a new OpenPGP private key object resulting from the import of @var{data} (a uniform array) according to @var{format}.  Optionally, a passphrase may be provided.
@end deffn

@c snarfed from ../guile/src/extra.c:57
@deffn {Scheme Procedure} import-openpgp-certificate data format
Return a new OpenPGP certificate object resulting from the import of @var{data} (a uniform array) according to @var{format}.
@end deffn

@c snarfed from ../guile/src/extra-enum-map.i.c:32
@deffn {Scheme Procedure} openpgp-certificate-format->string enumval
Return a string describing @var{enumval}, a @code{openpgp-certificate-format} value.
@end deffn

@c snarfed from ../guile/src/extra-smob-types.i.c:43
@deffn {Scheme Procedure} openpgp-keyring? obj
Return true if @var{obj} is of type @code{openpgp-keyring}.
@end deffn

@c snarfed from ../guile/src/extra-smob-types.i.c:27
@deffn {Scheme Procedure} openpgp-private-key? obj
Return true if @var{obj} is of type @code{openpgp-private-key}.
@end deffn

@c snarfed from ../guile/src/extra-smob-types.i.c:11
@deffn {Scheme Procedure} openpgp-certificate? obj
Return true if @var{obj} is of type @code{openpgp-certificate}.
@end deffn
