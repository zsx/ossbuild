<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="SoupAuthDomainBasic">
<refmeta>
<refentrytitle role="top_of_page" id="SoupAuthDomainBasic.top_of_page">SoupAuthDomainBasic</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBSOUP-2.4 Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>SoupAuthDomainBasic</refname>
<refpurpose>Server-side "Basic" authentication</refpurpose>
</refnamediv>

<refsynopsisdiv id="SoupAuthDomainBasic.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="SoupAuthDomainBasic-struct">SoupAuthDomainBasic</link>;
<link linkend="SoupAuthDomain">SoupAuthDomain</link> *    <link linkend="soup-auth-domain-basic-new">soup_auth_domain_basic_new</link>          (const <link linkend="char">char</link> *optname1,
                                                         ...);

<link linkend="gboolean">gboolean</link>            (<link linkend="SoupAuthDomainBasicAuthCallback">*SoupAuthDomainBasicAuthCallback</link>)  (<link linkend="SoupAuthDomain">SoupAuthDomain</link> *domain,
                                                         <link linkend="SoupMessage">SoupMessage</link> *msg,
                                                         const <link linkend="char">char</link> *username,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="soup-auth-domain-basic-set-auth-callback">soup_auth_domain_basic_set_auth_callback</link>
                                                        (<link linkend="SoupAuthDomain">SoupAuthDomain</link> *domain,
                                                         <link linkend="SoupAuthDomainBasicAuthCallback">SoupAuthDomainBasicAuthCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> dnotify);

#define             <link linkend="SOUP-AUTH-DOMAIN-BASIC-AUTH-CALLBACK--CAPS">SOUP_AUTH_DOMAIN_BASIC_AUTH_CALLBACK</link>
#define             <link linkend="SOUP-AUTH-DOMAIN-BASIC-AUTH-DATA--CAPS">SOUP_AUTH_DOMAIN_BASIC_AUTH_DATA</link>
</synopsis>
</refsynopsisdiv>

<refsect1 id="SoupAuthDomainBasic.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="SoupAuthDomain">SoupAuthDomain</link>
         +----SoupAuthDomainBasic
</synopsis>
</refsect1>





<refsect1 id="SoupAuthDomainBasic.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="SoupAuthDomainBasic--auth-callback">auth-callback</link>&quot;            <link linkend="gpointer">gpointer</link>              : Read / Write
  &quot;<link linkend="SoupAuthDomainBasic--auth-data">auth-data</link>&quot;                <link linkend="gpointer">gpointer</link>              : Read / Write
</synopsis>
</refsect1>



<refsect1 id="SoupAuthDomainBasic.description" role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="SoupAuthDomainBasic"><type>SoupAuthDomainBasic</type></link> handles the server side of HTTP "Basic" (ie,
cleartext password) authentication.</para>
<para>
</para>
</refsect1>

<refsect1 id="SoupAuthDomainBasic.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="SoupAuthDomainBasic-struct" role="struct">
<title>SoupAuthDomainBasic</title>
<indexterm zone="SoupAuthDomainBasic-struct"><primary sortas="SoupAuthDomainBasic">SoupAuthDomainBasic</primary></indexterm><programlisting>typedef struct _SoupAuthDomainBasic SoupAuthDomainBasic;</programlisting>
<para>
</para></refsect2>
<refsect2 id="soup-auth-domain-basic-new" role="function">
<title>soup_auth_domain_basic_new ()</title>
<indexterm zone="soup-auth-domain-basic-new"><primary sortas="soup_auth_domain_basic_new">soup_auth_domain_basic_new</primary></indexterm><programlisting><link linkend="SoupAuthDomain">SoupAuthDomain</link> *    soup_auth_domain_basic_new          (const <link linkend="char">char</link> *optname1,
                                                         ...);</programlisting>
<para>
Creates a <link linkend="SoupAuthDomainBasic"><type>SoupAuthDomainBasic</type></link>. You must set the
<link linkend="SOUP-AUTH-DOMAIN-REALM--CAPS"><literal>SOUP_AUTH_DOMAIN_REALM</literal></link> parameter, to indicate the realm name to be
returned with the authentication challenge to the client. Other
parameters are optional.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>optname1</parameter>&#160;:</term>
<listitem><simpara> name of first option, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara> option name/value pairs
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the new <link linkend="SoupAuthDomain"><type>SoupAuthDomain</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="SoupAuthDomainBasicAuthCallback" role="function">
<title>SoupAuthDomainBasicAuthCallback ()</title>
<indexterm zone="SoupAuthDomainBasicAuthCallback"><primary sortas="SoupAuthDomainBasicAuthCallback">SoupAuthDomainBasicAuthCallback</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            (*SoupAuthDomainBasicAuthCallback)  (<link linkend="SoupAuthDomain">SoupAuthDomain</link> *domain,
                                                         <link linkend="SoupMessage">SoupMessage</link> *msg,
                                                         const <link linkend="char">char</link> *username,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Callback used by <link linkend="SoupAuthDomainBasic"><type>SoupAuthDomainBasic</type></link> for authentication purposes.
The application should verify that <parameter>username</parameter> and <parameter>password</parameter> and valid
and return <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> or <link linkend="FALSE--CAPS"><literal>FALSE</literal></link>.
</para>
<para>
If you are maintaining your own password database (rather than
using the password to authenticate against some other system like
PAM or a remote server), you should make sure you know what you are
doing. In particular, don't store cleartext passwords, or
easily-computed hashes of cleartext passwords, even if you don't
care that much about the security of your server, because users
will frequently use the same password for multiple sites, and so
compromising any site with a cleartext (or easily-cracked) password
database may give attackers access to other more-interesting sites
as well.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>domain</parameter>&#160;:</term>
<listitem><simpara> the domain
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>msg</parameter>&#160;:</term>
<listitem><simpara> the message being authenticated
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>username</parameter>&#160;:</term>
<listitem><simpara> the username provided by the client
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> the password provided by the client
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> the data passed to <link linkend="soup-auth-domain-basic-set-auth-callback"><function>soup_auth_domain_basic_set_auth_callback()</function></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if <parameter>username</parameter> and <parameter>password</parameter> are valid
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="soup-auth-domain-basic-set-auth-callback" role="function">
<title>soup_auth_domain_basic_set_auth_callback ()</title>
<indexterm zone="soup-auth-domain-basic-set-auth-callback"><primary sortas="soup_auth_domain_basic_set_auth_callback">soup_auth_domain_basic_set_auth_callback</primary></indexterm><programlisting><link linkend="void">void</link>                soup_auth_domain_basic_set_auth_callback
                                                        (<link linkend="SoupAuthDomain">SoupAuthDomain</link> *domain,
                                                         <link linkend="SoupAuthDomainBasicAuthCallback">SoupAuthDomainBasicAuthCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> dnotify);</programlisting>
<para>
Sets the callback that <parameter>domain</parameter> will use to authenticate incoming
requests. For each request containing authorization, <parameter>domain</parameter> will
invoke the callback, and then either accept or reject the request
based on <parameter>callback</parameter>'s return value.
</para>
<para>
You can also set the auth callback by setting the
<link linkend="SOUP-AUTH-DOMAIN-BASIC-AUTH-CALLBACK--CAPS"><literal>SOUP_AUTH_DOMAIN_BASIC_AUTH_CALLBACK</literal></link> and
<link linkend="SOUP-AUTH-DOMAIN-BASIC-AUTH-DATA--CAPS"><literal>SOUP_AUTH_DOMAIN_BASIC_AUTH_DATA</literal></link> properties, which can also be
used to set the callback at construct time.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>domain</parameter>&#160;:</term>
<listitem><simpara> the domain
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> data to pass to <parameter>auth_callback</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dnotify</parameter>&#160;:</term>
<listitem><simpara> destroy notifier to free <parameter>user_data</parameter> when <parameter>domain</parameter>
is destroyed
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="SOUP-AUTH-DOMAIN-BASIC-AUTH-CALLBACK--CAPS" role="macro">
<title>SOUP_AUTH_DOMAIN_BASIC_AUTH_CALLBACK</title>
<indexterm zone="SOUP-AUTH-DOMAIN-BASIC-AUTH-CALLBACK--CAPS"><primary sortas="SOUP_AUTH_DOMAIN_BASIC_AUTH_CALLBACK">SOUP_AUTH_DOMAIN_BASIC_AUTH_CALLBACK</primary></indexterm><programlisting>#define SOUP_AUTH_DOMAIN_BASIC_AUTH_CALLBACK "auth-callback"
</programlisting>
<para>
Alias for the <link linkend="SoupAuthDomainBasic--auth-callback"><type>"auth-callback"</type></link> property.
(The <link linkend="SoupAuthDomainBasicAuthCallback"><type>SoupAuthDomainBasicAuthCallback</type></link>.)</para>
<para>
</para></refsect2>
<refsect2 id="SOUP-AUTH-DOMAIN-BASIC-AUTH-DATA--CAPS" role="macro">
<title>SOUP_AUTH_DOMAIN_BASIC_AUTH_DATA</title>
<indexterm zone="SOUP-AUTH-DOMAIN-BASIC-AUTH-DATA--CAPS"><primary sortas="SOUP_AUTH_DOMAIN_BASIC_AUTH_DATA">SOUP_AUTH_DOMAIN_BASIC_AUTH_DATA</primary></indexterm><programlisting>#define SOUP_AUTH_DOMAIN_BASIC_AUTH_DATA     "auth-data"
</programlisting>
<para>
Alias for the <link linkend="SoupAuthDomainBasic--auth-data"><type>"auth-data"</type></link> property.
(The data to pass to the <link linkend="SoupAuthDomainBasicAuthCallback"><type>SoupAuthDomainBasicAuthCallback</type></link>.)</para>
<para>
</para></refsect2>

</refsect1>
<refsect1 id="SoupAuthDomainBasic.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="SoupAuthDomainBasic--auth-callback" role="property"><title>The <literal>&quot;auth-callback&quot;</literal> property</title>
<indexterm zone="SoupAuthDomainBasic--auth-callback"><primary sortas="SoupAuthDomainBasic:auth-callback">SoupAuthDomainBasic:auth-callback</primary></indexterm><programlisting>  &quot;auth-callback&quot;            <link linkend="gpointer">gpointer</link>              : Read / Write</programlisting>
<para>Password-checking callback.</para></refsect2>
<refsect2 id="SoupAuthDomainBasic--auth-data" role="property"><title>The <literal>&quot;auth-data&quot;</literal> property</title>
<indexterm zone="SoupAuthDomainBasic--auth-data"><primary sortas="SoupAuthDomainBasic:auth-data">SoupAuthDomainBasic:auth-data</primary></indexterm><programlisting>  &quot;auth-data&quot;                <link linkend="gpointer">gpointer</link>              : Read / Write</programlisting>
<para>Data to pass to authentication callback.</para></refsect2>
</refsect1>




</refentry>
