<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="SoupSessionSync">
<refmeta>
<refentrytitle role="top_of_page" id="SoupSessionSync.top_of_page">SoupSessionSync</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBSOUP-2.4 Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>SoupSessionSync</refname>
<refpurpose>Soup session for blocking I/O in multithreaded
programs.</refpurpose>
</refnamediv>

<refsynopsisdiv id="SoupSessionSync.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="SoupSessionSync-struct">SoupSessionSync</link>;
<link linkend="SoupSession">SoupSession</link> *       <link linkend="soup-session-sync-new">soup_session_sync_new</link>               (void);
<link linkend="SoupSession">SoupSession</link> *       <link linkend="soup-session-sync-new-with-options">soup_session_sync_new_with_options</link>  (const <link linkend="char">char</link> *optname1,
                                                         ...);
</synopsis>
</refsynopsisdiv>

<refsect1 id="SoupSessionSync.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="SoupSession">SoupSession</link>
         +----SoupSessionSync
</synopsis>
</refsect1>








<refsect1 id="SoupSessionSync.description" role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="SoupSessionSync"><type>SoupSessionSync</type></link> is an implementation of <link linkend="SoupSession"><type>SoupSession</type></link> that uses
synchronous I/O, intended for use in multi-threaded programs.
</para>
<para>
You can use <link linkend="SoupSessionSync"><type>SoupSessionSync</type></link> from multiple threads concurrently.
Eg, you can send a <link linkend="SoupMessage"><type>SoupMessage</type></link> in one thread, and then while
waiting for the response, send another <link linkend="SoupMessage"><type>SoupMessage</type></link> from another
thread. You can also send a message from one thread and then call
<link linkend="soup-session-cancel-message"><function>soup_session_cancel_message()</function></link> on it from any other thread (although
you need to be careful to avoid race conditions, where the message
finishes and is then unreffed by the sending thread just before you
cancel it).
</para>
<para>
However, the majority of other types and methods in libsoup are not
MT-safe. In particular, you <emphasis>cannot</emphasis> modify or
examine a <link linkend="SoupMessage"><type>SoupMessage</type></link> while it is being transmitted by
<link linkend="SoupSessionSync"><type>SoupSessionSync</type></link> in another thread. Once a message has been handed
off to <link linkend="SoupSessionSync"><type>SoupSessionSync</type></link>, it can only be manipulated from its signal
handler callbacks, until I/O is complete.</para>
<para>
</para>
</refsect1>

<refsect1 id="SoupSessionSync.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="SoupSessionSync-struct" role="struct">
<title>SoupSessionSync</title>
<indexterm zone="SoupSessionSync-struct"><primary sortas="SoupSessionSync">SoupSessionSync</primary></indexterm><programlisting>typedef struct _SoupSessionSync SoupSessionSync;</programlisting>
<para>
</para></refsect2>
<refsect2 id="soup-session-sync-new" role="function">
<title>soup_session_sync_new ()</title>
<indexterm zone="soup-session-sync-new"><primary sortas="soup_session_sync_new">soup_session_sync_new</primary></indexterm><programlisting><link linkend="SoupSession">SoupSession</link> *       soup_session_sync_new               (void);</programlisting>
<para>
Creates an synchronous <link linkend="SoupSession"><type>SoupSession</type></link> with the default options.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the new session.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="soup-session-sync-new-with-options" role="function">
<title>soup_session_sync_new_with_options ()</title>
<indexterm zone="soup-session-sync-new-with-options"><primary sortas="soup_session_sync_new_with_options">soup_session_sync_new_with_options</primary></indexterm><programlisting><link linkend="SoupSession">SoupSession</link> *       soup_session_sync_new_with_options  (const <link linkend="char">char</link> *optname1,
                                                         ...);</programlisting>
<para>
Creates an synchronous <link linkend="SoupSession"><type>SoupSession</type></link> with the specified options.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>optname1</parameter>&#160;:</term>
<listitem><simpara> name of first property to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara> value of <parameter>optname1</parameter>, followed by additional property/value pairs
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the new session.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
