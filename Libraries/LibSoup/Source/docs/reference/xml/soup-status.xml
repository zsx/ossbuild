<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libsoup-24-soup-status">
<refmeta>
<refentrytitle role="top_of_page" id="libsoup-24-soup-status.top_of_page">soup-status</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBSOUP-2.4 Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>soup-status</refname>
<refpurpose>HTTP (and libsoup) status codes</refpurpose>
</refnamediv>

<refsynopsisdiv id="libsoup-24-soup-status.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="SOUP-STATUS-IS-TRANSPORT-ERROR--CAPS">SOUP_STATUS_IS_TRANSPORT_ERROR</link>      (status)
#define             <link linkend="SOUP-STATUS-IS-INFORMATIONAL--CAPS">SOUP_STATUS_IS_INFORMATIONAL</link>        (status)
#define             <link linkend="SOUP-STATUS-IS-SUCCESSFUL--CAPS">SOUP_STATUS_IS_SUCCESSFUL</link>           (status)
#define             <link linkend="SOUP-STATUS-IS-REDIRECTION--CAPS">SOUP_STATUS_IS_REDIRECTION</link>          (status)
#define             <link linkend="SOUP-STATUS-IS-CLIENT-ERROR--CAPS">SOUP_STATUS_IS_CLIENT_ERROR</link>         (status)
#define             <link linkend="SOUP-STATUS-IS-SERVER-ERROR--CAPS">SOUP_STATUS_IS_SERVER_ERROR</link>         (status)
enum                <link linkend="SoupKnownStatusCode">SoupKnownStatusCode</link>;
const <link linkend="char">char</link> *        <link linkend="soup-status-get-phrase">soup_status_get_phrase</link>              (<link linkend="guint">guint</link> status_code);
<link linkend="guint">guint</link>               <link linkend="soup-status-proxify">soup_status_proxify</link>                 (<link linkend="guint">guint</link> status_code);

#define             <link linkend="SOUP-HTTP-ERROR--CAPS">SOUP_HTTP_ERROR</link>
</synopsis>
</refsynopsisdiv>









<refsect1 id="libsoup-24-soup-status.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
<para>
</para>
</refsect1>

<refsect1 id="libsoup-24-soup-status.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="SOUP-STATUS-IS-TRANSPORT-ERROR--CAPS" role="macro">
<title>SOUP_STATUS_IS_TRANSPORT_ERROR()</title>
<indexterm zone="SOUP-STATUS-IS-TRANSPORT-ERROR--CAPS"><primary sortas="SOUP_STATUS_IS_TRANSPORT_ERROR">SOUP_STATUS_IS_TRANSPORT_ERROR</primary></indexterm><programlisting>#define SOUP_STATUS_IS_TRANSPORT_ERROR(status) ((status) &gt;  0   &amp;&amp; (status) &lt; 100)
</programlisting>
<para>
Tests if <parameter>status</parameter> is a libsoup transport error.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara> a status code
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="SOUP-STATUS-IS-INFORMATIONAL--CAPS" role="macro">
<title>SOUP_STATUS_IS_INFORMATIONAL()</title>
<indexterm zone="SOUP-STATUS-IS-INFORMATIONAL--CAPS"><primary sortas="SOUP_STATUS_IS_INFORMATIONAL">SOUP_STATUS_IS_INFORMATIONAL</primary></indexterm><programlisting>#define SOUP_STATUS_IS_INFORMATIONAL(status)   ((status) &gt;= 100 &amp;&amp; (status) &lt; 200)
</programlisting>
<para>
Tests if <parameter>status</parameter> is an Informational (1xx) response.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara> an HTTP status code
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="SOUP-STATUS-IS-SUCCESSFUL--CAPS" role="macro">
<title>SOUP_STATUS_IS_SUCCESSFUL()</title>
<indexterm zone="SOUP-STATUS-IS-SUCCESSFUL--CAPS"><primary sortas="SOUP_STATUS_IS_SUCCESSFUL">SOUP_STATUS_IS_SUCCESSFUL</primary></indexterm><programlisting>#define SOUP_STATUS_IS_SUCCESSFUL(status)      ((status) &gt;= 200 &amp;&amp; (status) &lt; 300)
</programlisting>
<para>
Tests if <parameter>status</parameter> is a Successful (2xx) response.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara> an HTTP status code
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="SOUP-STATUS-IS-REDIRECTION--CAPS" role="macro">
<title>SOUP_STATUS_IS_REDIRECTION()</title>
<indexterm zone="SOUP-STATUS-IS-REDIRECTION--CAPS"><primary sortas="SOUP_STATUS_IS_REDIRECTION">SOUP_STATUS_IS_REDIRECTION</primary></indexterm><programlisting>#define SOUP_STATUS_IS_REDIRECTION(status)     ((status) &gt;= 300 &amp;&amp; (status) &lt; 400)
</programlisting>
<para>
Tests if <parameter>status</parameter> is a Redirection (3xx) response.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara> an HTTP status code
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="SOUP-STATUS-IS-CLIENT-ERROR--CAPS" role="macro">
<title>SOUP_STATUS_IS_CLIENT_ERROR()</title>
<indexterm zone="SOUP-STATUS-IS-CLIENT-ERROR--CAPS"><primary sortas="SOUP_STATUS_IS_CLIENT_ERROR">SOUP_STATUS_IS_CLIENT_ERROR</primary></indexterm><programlisting>#define SOUP_STATUS_IS_CLIENT_ERROR(status)    ((status) &gt;= 400 &amp;&amp; (status) &lt; 500)
</programlisting>
<para>
Tests if <parameter>status</parameter> is a Client Error (4xx) response.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara> an HTTP status code
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="SOUP-STATUS-IS-SERVER-ERROR--CAPS" role="macro">
<title>SOUP_STATUS_IS_SERVER_ERROR()</title>
<indexterm zone="SOUP-STATUS-IS-SERVER-ERROR--CAPS"><primary sortas="SOUP_STATUS_IS_SERVER_ERROR">SOUP_STATUS_IS_SERVER_ERROR</primary></indexterm><programlisting>#define SOUP_STATUS_IS_SERVER_ERROR(status)    ((status) &gt;= 500 &amp;&amp; (status) &lt; 600)
</programlisting>
<para>
Tests if <parameter>status</parameter> is a Server Error (5xx) response.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara> an HTTP status code
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="SoupKnownStatusCode" role="enum">
<title>enum SoupKnownStatusCode</title>
<indexterm zone="SoupKnownStatusCode"><primary sortas="SoupKnownStatusCode">SoupKnownStatusCode</primary></indexterm><programlisting>typedef enum {
	SOUP_STATUS_NONE,

	/* Transport Errors */
	SOUP_STATUS_CANCELLED                       = 1,
	SOUP_STATUS_CANT_RESOLVE,
	SOUP_STATUS_CANT_RESOLVE_PROXY,
	SOUP_STATUS_CANT_CONNECT,
	SOUP_STATUS_CANT_CONNECT_PROXY,
	SOUP_STATUS_SSL_FAILED,
	SOUP_STATUS_IO_ERROR,
	SOUP_STATUS_MALFORMED,
	SOUP_STATUS_TRY_AGAIN,

	/* HTTP Status Codes */
	SOUP_STATUS_CONTINUE                        = 100,
	SOUP_STATUS_SWITCHING_PROTOCOLS             = 101,
	SOUP_STATUS_PROCESSING                      = 102, /* WebDAV */

	SOUP_STATUS_OK                              = 200,
	SOUP_STATUS_CREATED                         = 201,
	SOUP_STATUS_ACCEPTED                        = 202,
	SOUP_STATUS_NON_AUTHORITATIVE               = 203,
	SOUP_STATUS_NO_CONTENT                      = 204,
	SOUP_STATUS_RESET_CONTENT                   = 205,
	SOUP_STATUS_PARTIAL_CONTENT                 = 206,
	SOUP_STATUS_MULTI_STATUS                    = 207, /* WebDAV */

	SOUP_STATUS_MULTIPLE_CHOICES                = 300,
	SOUP_STATUS_MOVED_PERMANENTLY               = 301,
	SOUP_STATUS_FOUND                           = 302,
	SOUP_STATUS_MOVED_TEMPORARILY               = 302, /* RFC 2068 */
	SOUP_STATUS_SEE_OTHER                       = 303,
	SOUP_STATUS_NOT_MODIFIED                    = 304,
	SOUP_STATUS_USE_PROXY                       = 305,
	SOUP_STATUS_NOT_APPEARING_IN_THIS_PROTOCOL  = 306, /* (reserved) */
	SOUP_STATUS_TEMPORARY_REDIRECT              = 307,

	SOUP_STATUS_BAD_REQUEST                     = 400,
	SOUP_STATUS_UNAUTHORIZED                    = 401,
	SOUP_STATUS_PAYMENT_REQUIRED                = 402, /* (reserved) */
	SOUP_STATUS_FORBIDDEN                       = 403,
	SOUP_STATUS_NOT_FOUND                       = 404,
	SOUP_STATUS_METHOD_NOT_ALLOWED              = 405,
	SOUP_STATUS_NOT_ACCEPTABLE                  = 406,
	SOUP_STATUS_PROXY_AUTHENTICATION_REQUIRED   = 407,
	SOUP_STATUS_PROXY_UNAUTHORIZED              = SOUP_STATUS_PROXY_AUTHENTICATION_REQUIRED,
	SOUP_STATUS_REQUEST_TIMEOUT                 = 408,
	SOUP_STATUS_CONFLICT                        = 409,
	SOUP_STATUS_GONE                            = 410,
	SOUP_STATUS_LENGTH_REQUIRED                 = 411,
	SOUP_STATUS_PRECONDITION_FAILED             = 412,
	SOUP_STATUS_REQUEST_ENTITY_TOO_LARGE        = 413,
	SOUP_STATUS_REQUEST_URI_TOO_LONG            = 414,
	SOUP_STATUS_UNSUPPORTED_MEDIA_TYPE          = 415,
	SOUP_STATUS_REQUESTED_RANGE_NOT_SATISFIABLE = 416,
	SOUP_STATUS_INVALID_RANGE                   = SOUP_STATUS_REQUESTED_RANGE_NOT_SATISFIABLE,
	SOUP_STATUS_EXPECTATION_FAILED              = 417,
	SOUP_STATUS_UNPROCESSABLE_ENTITY            = 422, /* WebDAV */
	SOUP_STATUS_LOCKED                          = 423, /* WebDAV */
	SOUP_STATUS_FAILED_DEPENDENCY               = 424, /* WebDAV */

	SOUP_STATUS_INTERNAL_SERVER_ERROR           = 500,
	SOUP_STATUS_NOT_IMPLEMENTED                 = 501,
	SOUP_STATUS_BAD_GATEWAY                     = 502,
	SOUP_STATUS_SERVICE_UNAVAILABLE             = 503,
	SOUP_STATUS_GATEWAY_TIMEOUT                 = 504,
	SOUP_STATUS_HTTP_VERSION_NOT_SUPPORTED      = 505,
	SOUP_STATUS_INSUFFICIENT_STORAGE            = 507, /* WebDAV search */
	SOUP_STATUS_NOT_EXTENDED                    = 510  /* RFC 2774 */
} SoupKnownStatusCode;
</programlisting>
<para>
These represent the known HTTP status code values, plus various
network and internal errors.</para>
<para>
</para><variablelist role="enum">
<varlistentry id="SOUP-STATUS-NONE--CAPS" role="constant">
<term><literal>SOUP_STATUS_NONE</literal></term>
<listitem><simpara> No status available. (Eg, the message has not
been sent yet)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-CANCELLED--CAPS" role="constant">
<term><literal>SOUP_STATUS_CANCELLED</literal></term>
<listitem><simpara> Message was cancelled locally
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-CANT-RESOLVE--CAPS" role="constant">
<term><literal>SOUP_STATUS_CANT_RESOLVE</literal></term>
<listitem><simpara> Unable to resolve destination host name
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-CANT-RESOLVE-PROXY--CAPS" role="constant">
<term><literal>SOUP_STATUS_CANT_RESOLVE_PROXY</literal></term>
<listitem><simpara> Unable to resolve proxy host name
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-CANT-CONNECT--CAPS" role="constant">
<term><literal>SOUP_STATUS_CANT_CONNECT</literal></term>
<listitem><simpara> Unable to connect to remote host
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-CANT-CONNECT-PROXY--CAPS" role="constant">
<term><literal>SOUP_STATUS_CANT_CONNECT_PROXY</literal></term>
<listitem><simpara> Unable to connect to proxy
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-SSL-FAILED--CAPS" role="constant">
<term><literal>SOUP_STATUS_SSL_FAILED</literal></term>
<listitem><simpara> SSL negotiation failed
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-IO-ERROR--CAPS" role="constant">
<term><literal>SOUP_STATUS_IO_ERROR</literal></term>
<listitem><simpara> A network error occurred, or the other end
closed the connection unexpectedly
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-MALFORMED--CAPS" role="constant">
<term><literal>SOUP_STATUS_MALFORMED</literal></term>
<listitem><simpara> Malformed data (usually a programmer error)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-TRY-AGAIN--CAPS" role="constant">
<term><literal>SOUP_STATUS_TRY_AGAIN</literal></term>
<listitem><simpara> Formerly used internally. Now unused.
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-CONTINUE--CAPS" role="constant">
<term><literal>SOUP_STATUS_CONTINUE</literal></term>
<listitem><simpara> 100 Continue (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-SWITCHING-PROTOCOLS--CAPS" role="constant">
<term><literal>SOUP_STATUS_SWITCHING_PROTOCOLS</literal></term>
<listitem><simpara> 101 Switching Protocols (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-PROCESSING--CAPS" role="constant">
<term><literal>SOUP_STATUS_PROCESSING</literal></term>
<listitem><simpara> 102 Processing (WebDAV)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-OK--CAPS" role="constant">
<term><literal>SOUP_STATUS_OK</literal></term>
<listitem><simpara> 200 Success (HTTP). Also used by many lower-level
soup routines to indicate success.
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-CREATED--CAPS" role="constant">
<term><literal>SOUP_STATUS_CREATED</literal></term>
<listitem><simpara> 201 Created (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-ACCEPTED--CAPS" role="constant">
<term><literal>SOUP_STATUS_ACCEPTED</literal></term>
<listitem><simpara> 202 Accepted (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-NON-AUTHORITATIVE--CAPS" role="constant">
<term><literal>SOUP_STATUS_NON_AUTHORITATIVE</literal></term>
<listitem><simpara> 203 Non-Authoritative Information
(HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-NO-CONTENT--CAPS" role="constant">
<term><literal>SOUP_STATUS_NO_CONTENT</literal></term>
<listitem><simpara> 204 No Content (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-RESET-CONTENT--CAPS" role="constant">
<term><literal>SOUP_STATUS_RESET_CONTENT</literal></term>
<listitem><simpara> 205 Reset Content (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-PARTIAL-CONTENT--CAPS" role="constant">
<term><literal>SOUP_STATUS_PARTIAL_CONTENT</literal></term>
<listitem><simpara> 206 Partial Content (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-MULTI-STATUS--CAPS" role="constant">
<term><literal>SOUP_STATUS_MULTI_STATUS</literal></term>
<listitem><simpara> 207 Multi-Status (WebDAV)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-MULTIPLE-CHOICES--CAPS" role="constant">
<term><literal>SOUP_STATUS_MULTIPLE_CHOICES</literal></term>
<listitem><simpara> 300 Multiple Choices (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-MOVED-PERMANENTLY--CAPS" role="constant">
<term><literal>SOUP_STATUS_MOVED_PERMANENTLY</literal></term>
<listitem><simpara> 301 Moved Permanently (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-FOUND--CAPS" role="constant">
<term><literal>SOUP_STATUS_FOUND</literal></term>
<listitem><simpara> 302 Found (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-MOVED-TEMPORARILY--CAPS" role="constant">
<term><literal>SOUP_STATUS_MOVED_TEMPORARILY</literal></term>
<listitem><simpara> 302 Moved Temporarily (old name,
RFC 2068)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-SEE-OTHER--CAPS" role="constant">
<term><literal>SOUP_STATUS_SEE_OTHER</literal></term>
<listitem><simpara> 303 See Other (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-NOT-MODIFIED--CAPS" role="constant">
<term><literal>SOUP_STATUS_NOT_MODIFIED</literal></term>
<listitem><simpara> 304 Not Modified (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-USE-PROXY--CAPS" role="constant">
<term><literal>SOUP_STATUS_USE_PROXY</literal></term>
<listitem><simpara> 305 Use Proxy (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-NOT-APPEARING-IN-THIS-PROTOCOL--CAPS" role="constant">
<term><literal>SOUP_STATUS_NOT_APPEARING_IN_THIS_PROTOCOL</literal></term>
<listitem><simpara> 306 [Unused] (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-TEMPORARY-REDIRECT--CAPS" role="constant">
<term><literal>SOUP_STATUS_TEMPORARY_REDIRECT</literal></term>
<listitem><simpara> 307 Temporary Redirect (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-BAD-REQUEST--CAPS" role="constant">
<term><literal>SOUP_STATUS_BAD_REQUEST</literal></term>
<listitem><simpara> 400 Bad Request (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-UNAUTHORIZED--CAPS" role="constant">
<term><literal>SOUP_STATUS_UNAUTHORIZED</literal></term>
<listitem><simpara> 401 Unauthorized (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-PAYMENT-REQUIRED--CAPS" role="constant">
<term><literal>SOUP_STATUS_PAYMENT_REQUIRED</literal></term>
<listitem><simpara> 402 Payment Required (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-FORBIDDEN--CAPS" role="constant">
<term><literal>SOUP_STATUS_FORBIDDEN</literal></term>
<listitem><simpara> 403 Forbidden (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-NOT-FOUND--CAPS" role="constant">
<term><literal>SOUP_STATUS_NOT_FOUND</literal></term>
<listitem><simpara> 404 Not Found (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-METHOD-NOT-ALLOWED--CAPS" role="constant">
<term><literal>SOUP_STATUS_METHOD_NOT_ALLOWED</literal></term>
<listitem><simpara> 405 Method Not Allowed (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-NOT-ACCEPTABLE--CAPS" role="constant">
<term><literal>SOUP_STATUS_NOT_ACCEPTABLE</literal></term>
<listitem><simpara> 406 Not Acceptable (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-PROXY-AUTHENTICATION-REQUIRED--CAPS" role="constant">
<term><literal>SOUP_STATUS_PROXY_AUTHENTICATION_REQUIRED</literal></term>
<listitem><simpara> 407 Proxy Authentication
Required (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-PROXY-UNAUTHORIZED--CAPS" role="constant">
<term><literal>SOUP_STATUS_PROXY_UNAUTHORIZED</literal></term>
<listitem><simpara> shorter alias for
<link linkend="SOUP-STATUS-PROXY-AUTHENTICATION-REQUIRED--CAPS"><literal>SOUP_STATUS_PROXY_AUTHENTICATION_REQUIRED</literal></link>
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-REQUEST-TIMEOUT--CAPS" role="constant">
<term><literal>SOUP_STATUS_REQUEST_TIMEOUT</literal></term>
<listitem><simpara> 408 Request Timeout (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-CONFLICT--CAPS" role="constant">
<term><literal>SOUP_STATUS_CONFLICT</literal></term>
<listitem><simpara> 409 Conflict (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-GONE--CAPS" role="constant">
<term><literal>SOUP_STATUS_GONE</literal></term>
<listitem><simpara> 410 Gone (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-LENGTH-REQUIRED--CAPS" role="constant">
<term><literal>SOUP_STATUS_LENGTH_REQUIRED</literal></term>
<listitem><simpara> 411 Length Required (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-PRECONDITION-FAILED--CAPS" role="constant">
<term><literal>SOUP_STATUS_PRECONDITION_FAILED</literal></term>
<listitem><simpara> 412 Precondition Failed (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-REQUEST-ENTITY-TOO-LARGE--CAPS" role="constant">
<term><literal>SOUP_STATUS_REQUEST_ENTITY_TOO_LARGE</literal></term>
<listitem><simpara> 413 Request Entity Too Large
(HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-REQUEST-URI-TOO-LONG--CAPS" role="constant">
<term><literal>SOUP_STATUS_REQUEST_URI_TOO_LONG</literal></term>
<listitem><simpara> 414 Request-URI Too Long (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-UNSUPPORTED-MEDIA-TYPE--CAPS" role="constant">
<term><literal>SOUP_STATUS_UNSUPPORTED_MEDIA_TYPE</literal></term>
<listitem><simpara> 415 Unsupported Media Type
(HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-REQUESTED-RANGE-NOT-SATISFIABLE--CAPS" role="constant">
<term><literal>SOUP_STATUS_REQUESTED_RANGE_NOT_SATISFIABLE</literal></term>
<listitem><simpara> 416 Requested Range
Not Satisfiable (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-INVALID-RANGE--CAPS" role="constant">
<term><literal>SOUP_STATUS_INVALID_RANGE</literal></term>
<listitem><simpara> shorter alias for
<link linkend="SOUP-STATUS-REQUESTED-RANGE-NOT-SATISFIABLE--CAPS"><literal>SOUP_STATUS_REQUESTED_RANGE_NOT_SATISFIABLE</literal></link>
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-EXPECTATION-FAILED--CAPS" role="constant">
<term><literal>SOUP_STATUS_EXPECTATION_FAILED</literal></term>
<listitem><simpara> 417 Expectation Failed (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-UNPROCESSABLE-ENTITY--CAPS" role="constant">
<term><literal>SOUP_STATUS_UNPROCESSABLE_ENTITY</literal></term>
<listitem><simpara> 422 Unprocessable Entity
(WebDAV)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-LOCKED--CAPS" role="constant">
<term><literal>SOUP_STATUS_LOCKED</literal></term>
<listitem><simpara> 423 Locked (WebDAV)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-FAILED-DEPENDENCY--CAPS" role="constant">
<term><literal>SOUP_STATUS_FAILED_DEPENDENCY</literal></term>
<listitem><simpara> 424 Failed Dependency (WebDAV)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-INTERNAL-SERVER-ERROR--CAPS" role="constant">
<term><literal>SOUP_STATUS_INTERNAL_SERVER_ERROR</literal></term>
<listitem><simpara> 500 Internal Server Error
(HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-NOT-IMPLEMENTED--CAPS" role="constant">
<term><literal>SOUP_STATUS_NOT_IMPLEMENTED</literal></term>
<listitem><simpara> 501 Not Implemented (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-BAD-GATEWAY--CAPS" role="constant">
<term><literal>SOUP_STATUS_BAD_GATEWAY</literal></term>
<listitem><simpara> 502 Bad Gateway (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-SERVICE-UNAVAILABLE--CAPS" role="constant">
<term><literal>SOUP_STATUS_SERVICE_UNAVAILABLE</literal></term>
<listitem><simpara> 503 Service Unavailable (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-GATEWAY-TIMEOUT--CAPS" role="constant">
<term><literal>SOUP_STATUS_GATEWAY_TIMEOUT</literal></term>
<listitem><simpara> 504 Gateway Timeout (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-HTTP-VERSION-NOT-SUPPORTED--CAPS" role="constant">
<term><literal>SOUP_STATUS_HTTP_VERSION_NOT_SUPPORTED</literal></term>
<listitem><simpara> 505 HTTP Version Not
Supported (HTTP)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-INSUFFICIENT-STORAGE--CAPS" role="constant">
<term><literal>SOUP_STATUS_INSUFFICIENT_STORAGE</literal></term>
<listitem><simpara> 507 Insufficient Storage
(WebDAV)
</simpara></listitem>
</varlistentry>
<varlistentry id="SOUP-STATUS-NOT-EXTENDED--CAPS" role="constant">
<term><literal>SOUP_STATUS_NOT_EXTENDED</literal></term>
<listitem><simpara> 510 Not Extended (RFC 2774)
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="soup-status-get-phrase" role="function">
<title>soup_status_get_phrase ()</title>
<indexterm zone="soup-status-get-phrase"><primary sortas="soup_status_get_phrase">soup_status_get_phrase</primary></indexterm><programlisting>const <link linkend="char">char</link> *        soup_status_get_phrase              (<link linkend="guint">guint</link> status_code);</programlisting>
<para>
Looks up the stock HTTP description of <parameter>status_code</parameter>. This is used
by <link linkend="soup-message-set-status"><function>soup_message_set_status()</function></link> to get the correct text to go with a
given status code.
</para>
<para>
<emphasis>There is no reason for you to ever use this
function.</emphasis> If you wanted the textual description for the
<link linkend="status-code"><literal>status_code</literal></link> of a given <link linkend="SoupMessage"><type>SoupMessage</type></link>, you should just look at the
message's <link linkend="reason-phrase"><literal>reason_phrase</literal></link>. However, you should only do that for use
in debugging messages; HTTP reason phrases are not localized, and
are not generally very descriptive anyway, and so they should never
be presented to the user directly. Instead, you should create you
own error messages based on the status code, and on what you were
trying to do.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>status_code</parameter>&#160;:</term>
<listitem><simpara> an HTTP status code
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the (terse, English) description of <parameter>status_code</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="soup-status-proxify" role="function" condition="since:2.26">
<title>soup_status_proxify ()</title>
<indexterm zone="soup-status-proxify" role="2.26"><primary sortas="soup_status_proxify">soup_status_proxify</primary></indexterm><programlisting><link linkend="guint">guint</link>               soup_status_proxify                 (<link linkend="guint">guint</link> status_code);</programlisting>
<para>
Turns <link linkend="SOUP-STATUS-CANT-RESOLVE--CAPS"><literal>SOUP_STATUS_CANT_RESOLVE</literal></link> into
<link linkend="SOUP-STATUS-CANT-RESOLVE-PROXY--CAPS"><literal>SOUP_STATUS_CANT_RESOLVE_PROXY</literal></link> and <link linkend="SOUP-STATUS-CANT-CONNECT--CAPS"><literal>SOUP_STATUS_CANT_CONNECT</literal></link> into
<link linkend="SOUP-STATUS-CANT-CONNECT-PROXY--CAPS"><literal>SOUP_STATUS_CANT_CONNECT_PROXY</literal></link>. Other status codes are passed
through unchanged.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>status_code</parameter>&#160;:</term>
<listitem><simpara> a status code
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "proxified" equivalent of <parameter>status_code</parameter>.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.26</para></refsect2>
<refsect2 id="SOUP-HTTP-ERROR--CAPS" role="macro">
<title>SOUP_HTTP_ERROR</title>
<indexterm zone="SOUP-HTTP-ERROR--CAPS"><primary sortas="SOUP_HTTP_ERROR">SOUP_HTTP_ERROR</primary></indexterm><programlisting>#define SOUP_HTTP_ERROR soup_http_error_quark()
</programlisting>
<para>
A <link linkend="GError"><type>GError</type></link> domain representing an HTTP status. Use a
<link linkend="SoupKnownStatusCode"><type>SoupKnownStatusCode</type></link> for the <structfield>code</structfield>
value.</para>
<para>
</para></refsect2>

</refsect1>




</refentry>
